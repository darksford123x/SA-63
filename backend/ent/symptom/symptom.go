// Code generated by entc, DO NOT EDIT.

package symptom

const (
	// Label holds the string label denoting the symptom type in the database.
	Label = "symptom"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldSymptomID holds the string denoting the symptom_id field in the database.
	FieldSymptomID = "symptom_id"
	// FieldSymptomName holds the string denoting the symptom_name field in the database.
	FieldSymptomName = "symptom_name"

	// EdgeSymptoms holds the string denoting the symptoms edge name in mutations.
	EdgeSymptoms = "symptoms"

	// Table holds the table name of the symptom in the database.
	Table = "symptoms"
	// SymptomsTable is the table the holds the symptoms relation/edge. The primary key declared below.
	SymptomsTable = "symptom_symptoms"
	// SymptomsInverseTable is the table name for the RepairInvoice entity.
	// It exists in this package in order to avoid circular dependency with the "repairinvoice" package.
	SymptomsInverseTable = "repair_invoices"
)

// Columns holds all SQL columns for symptom fields.
var Columns = []string{
	FieldID,
	FieldSymptomID,
	FieldSymptomName,
}

var (
	// SymptomsPrimaryKey and SymptomsColumn2 are the table columns denoting the
	// primary key for the symptoms relation (M2M).
	SymptomsPrimaryKey = []string{"symptom_id", "repair_invoice_id"}
)

var (
	// SymptomNameValidator is a validator for the "Symptom_name" field. It is called by the builders before save.
	SymptomNameValidator func(string) error
)
